* Create syntax for combining strings
* Create a keyword "protected". If a register is protected, it will be pushed and popped
  at every function call.
* Consider making cx/ecx/rcx protected by default in every loop.

* Consider removing "rawloop".
* Make "use" work with C libraries. For including a library+include files.
  Automatic inclusion of the right .h files with #include.
  - or -
  Automatic linking of libraries and inclusion of header files in a block of inline C when functions are not found. Like printf, sin, cos and SDL_CreateRenderer.

* Add nested loops

* Solve rosetta code tasks + programming language benchmark game tasks.
* Implement a more expressive sub-language and/or inline Go/Julia/Lua/IO

* Align comments. Drop all the "\t" use in the code.

* Add functions for checking which token combinations qualifies for which treatment.

2. Use the token module that comes with Go
3. Write code for matching { and }, so that void main() { is not confused by a premature }

* Built in Quaternions, Matrices, Lists, Vectors and doubles. No floats.

(* Possibly syntax for linking with libraries, that connects with pkg-config? "use sdl" should use the right link and inclusions.)

* Local variables (.bss section or on the stack? ) or heap?
        * .data for constants
	* .bss for uninitialized variables
	* the heap for local variables that will not use too much memory?
	* the stack for the rest?
* Add and fix local variables. Use the .bss section. (Remember to include .bss when building kernels)

* Return values (not only eax/rax etc)

* Remove the [ebp-8] local variable testing code.
* Add the assembly version of printf.
* Make it easy to link with OpenGL or SDL2.
* Parse trees instead of token lists, for function calls.
* Test on Cygwin on Wine as well, possibly change the uses of uname

* Add a -debug=true flag that includes the C std library and makes it possible to use printf. Drop the assembly version of printf, not needed. Should also compile with -O1 -g etc.

* Incorporate more ideas (and gcc flags) from this stackoverflow answer: http://stackoverflow.com/a/10552160/131264

* Add a way to replace one line of tokens with several lines of tokens.

* Create a standard library that contains platform-dependent battlestar-functions

--- done ---
* if blocks (condition ... end) [done]
* Created "99 bottles of beer" [done]
* Added the "stack -> register" and "register -> stack" opreator [done]
* Make syscall() work correctly, ref hi64.bts [done]
* Create a write() function [done]
* Inline assembly with ie. "(asm 32) mov eax, 42"
