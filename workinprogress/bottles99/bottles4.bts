const bottle = " bottle"
const plural = "s"
const ofbeer = " of beer"
const wall = " on the wall"
const sep = ", "
const takedown = "Take one down and pass it around, "
const u_no = "No"
const l_no = "no"
const more = " more bottles "
const store = "Go to the store and buy some more, "
const dotnl = ".\n"
const nl = "\n"

// Write two digits, uses the value in a
fun writenum
    b = a
    a >= 10
        a /= 10
        // modulo is in the d register after idiv
        b = d
        a += 48 // ASCII value for '0'
        write(chr(a))
    end
    a = b
    a += 48 // ASCII value for '0'
    write(chr(a))
end

fun main
    loop 99
        // Save loop counter for later, twice
        c -> stack
        c -> stack

        // Print the loop counter (passed in the a register)
        a = c
        writenum()

        // N, "bottles of beer on the wall, "
        writestack_reverse // save the stackpointer to a
            bottle -> stack // push an entire string to the stack, not including the length or 0 byte
            plural -> stack
            ofbeer -> stack
            wall -> stack
            sep -> stack
        // write the string from a to stackpointer and set stackpointer bacl to a
        end

        // Retrieve and print the number
        stack -> a
        writenum()

        // N, "bottles of beer."
        writestack_reverse
            bottle -> stack
            plural -> stack
            ofbeer -> stack
            dotnl -> stack
        end

        // "Take one down and pass it around,"
        write(takedown)

        // N-1, "bottles of beer on the wall."
        stack -> a
        a--
        // Store N-1, used just a few lines down
        a -> stack
        writenum()

        write(bottle)
        // Retrieve N-1
        stack -> a
        // Write an "s" if the count is not 1
        a != 1
            write(plural)
        end

        // Write the rest
        writestack_reverse
            ofbeer -> stack
            wall -> stack
            dotnl -> stack
            nl -> stack
        end

        // Skip to the top of the loop while the counter is >= 2
        continue (c >= 2)

        // At the last two

        // "1 bottle of beer on the wall,"
        a = 1
        writenum()

        writestack_reverse
            bottle -> stack
            ofbeer -> stack
            wall -> stack
            sep -> stack
        end

        // "1"
        a = 1
        writenum()

        writestack_reverse
            // " bottle of beer."
            bottle -> stack
            ofbeer -> stack
            dotnl -> stack
            // "Take one down and pass it around,"
            takedown -> stack
            // "no more bottles of beer on the wall."
            l_no -> stack
            more -> stack
            ofbeer -> stack
            wall -> stack
            dotnl -> stack
            // Blank line
            nl -> stack
            // "No more bottles of beer on the wall,"
            u_no -> stack
            more -> stack
            ofbeer -> stack
            wall -> stack
            sep -> stack
            // "no more bottles of beer."
            l_no -> stack
            more -> stack
            ofbeer -> stack
            dotnl -> stack
            // "Go to the store and buy some more,"
            store -> stack
        end

        // "99 bottles of beer on the wall."
        a = 99
        writenum()

        writestack_reverse
            bottle -> stack
            plural -> stack
            ofbeer -> stack
            wall -> stack
            dotnl -> stack
        end
    end
end


// vim: set syntax=c ts=4 sw=4 et:
