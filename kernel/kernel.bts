bootable                       // this is not a regular source file, but a kernel
                               // (must be loaded by grub, qemu -kernel or similar)

extern kmain                   // the C function that is called when booting

fun main
    kmain
    halt                       // clear interrupts, halt and loop forever
end

// todo
fun success
    halt                       // need a way to indicate success here
end

inline_c
// thanks http://arjunsreedharan.org/post/82710718100/kernel-101-lets-write-a-kernel
void kmain(void)
{
    char *str = "Success!";
    char *vidptr = (char*)0xb8000;  //video mem begins here.
    unsigned int i = 0;
    unsigned int j = 0;
    //clear all
    while(j < 80 * 25 * 2) {
        //blank character
        vidptr[j] = ' ';
        //attribute-byte: light grey on black screen    
        vidptr[j+1] = 0x07;         
        j = j + 2;
    }
    j = 0;
    while(str[j] != '\0') {
        vidptr[i] = str[j];
        vidptr[i+1] = 0x07;
        ++j;
        i = i + 2;
    }
    return;
}
end // inline_c

// vim: set syntax=c ts=4 sw=4 et:
